{"ast":null,"code":"var _jsxFileName = \"D:\\\\ECE\\\\ING4\\\\Techno Web\\\\Projet1_pokedex\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\containers\\\\guideMeteo.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Meteo from \"../components/meteo\";\nimport \"../App.css\";\nconst API_URL = \"http://api.openweathermap.org/data/2.5/forecast\";\nconst API_KEY = \"768a35a09a1701be84498950a95e7cf5\";\nconst API_KEY2 = \"4081444b7b90198136fefe6ed4ccf35b\";\nexport default class GuideMeteo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callAPI = city => {\n      // Call API\n      axios.get(\"\".concat(API_URL, \"?q=\").concat(city, \"&appid=\").concat(API_KEY2, \"&units=metric\")).then(({\n        data\n      }) => {\n        console.log(data); // Recupere uniquement la propriété data\n\n        const list = data.list; // On prend les trois premières heures de chaque jour (donc de 0-3h))\n\n        const forecast = [list[0], list[9], list[17], list[25], list[33]];\n        this.setState({\n          forecast\n        });\n      }).catch(console.error);\n    };\n\n    this.state = {\n      forecast: null\n    };\n  }\n\n  // Lance un appel au lancement du component\n  componentDidMount() {\n    const city = this.props.city;\n    this.callAPI(city);\n  } // A chaque update relance une api\n\n\n  componentDidUpdate(nextProps) {\n    // Ici on verifie que la mise à jour concerne bien le champs city\n    if (nextProps !== this.props.city) {\n      this.callAPI(nextProps.city);\n    }\n  }\n\n  render() {\n    const forecast = this.state.forecast;\n    const city = this.props.city;\n    if (!forecast) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Loading...\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"forecast-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, city), React.createElement(\"div\", {\n      className: \"forecast-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, forecast.map((forecastData, index) => {\n      return React.createElement(Meteo, {\n        key: index,\n        data: forecastData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/ECE/ING4/Techno Web/Projet1_pokedex/PROJECT_WEB_OCRES/frontend/src/containers/guideMeteo.js"],"names":["React","axios","Meteo","API_URL","API_KEY","API_KEY2","GuideMeteo","Component","constructor","props","callAPI","city","get","then","data","console","log","list","forecast","setState","catch","error","state","componentDidMount","componentDidUpdate","nextProps","render","map","forecastData","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,YAAP;AAEA,MAAMC,OAAO,GAAG,iDAAhB;AACA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,QAAQ,GAAG,kCAAjB;AAEA,eAAe,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOjBC,OAPiB,GAOPC,IAAI,IAAI;AAChB;AACAV,MAAAA,KAAK,CACFW,GADH,WACUT,OADV,gBACuBQ,IADvB,oBACqCN,QADrC,oBAEGQ,IAFH,CAEQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADkB,CAElB;;AAFkB,cAGVG,IAHU,GAGDH,IAHC,CAGVG,IAHU,EAIlB;;AACA,cAAMC,QAAQ,GAAG,CAACD,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,EAAmBA,IAAI,CAAC,EAAD,CAAvB,EAA6BA,IAAI,CAAC,EAAD,CAAjC,EAAuCA,IAAI,CAAC,EAAD,CAA3C,CAAjB;AAEA,aAAKE,QAAL,CAAc;AAAED,UAAAA;AAAF,SAAd;AACD,OAVH,EAWGE,KAXH,CAWSL,OAAO,CAACM,KAXjB;AAYD,KArBgB;;AAEf,SAAKC,KAAL,GAAa;AACXJ,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAkBH;AACAK,EAAAA,iBAAiB,GAAG;AAAA,UACRZ,IADQ,GACC,KAAKF,KADN,CACRE,IADQ;AAEhB,SAAKD,OAAL,CAAaC,IAAb;AACH,GA5BmD,CA8BpD;;;AACAa,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B;AACA,QAAIA,SAAS,KAAK,KAAKhB,KAAL,CAAWE,IAA7B,EAAmC;AACjC,WAAKD,OAAL,CAAae,SAAS,CAACd,IAAvB;AACD;AACF;;AAEDe,EAAAA,MAAM,GAAG;AAAA,UACGR,QADH,GACgB,KAAKI,KADrB,CACGJ,QADH;AAAA,UAEGP,IAFH,GAEY,KAAKF,KAFjB,CAEGE,IAFH;AAIL,QAAI,CAACO,QAAL,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAEf,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCP,IAAjC,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGO,QAAQ,CAACS,GAAT,CAAa,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACrC,aAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,KAAZ;AAAmB,QAAA,IAAI,EAAED,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CAFH,CAFF,CADF;AAgBD;;AA5DiD","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Meteo from \"../components/meteo\";\r\nimport \"../App.css\";\r\n\r\nconst API_URL = \"http://api.openweathermap.org/data/2.5/forecast\";\r\nconst API_KEY = \"768a35a09a1701be84498950a95e7cf5\";\r\nconst API_KEY2 = \"4081444b7b90198136fefe6ed4ccf35b\";\r\n\r\nexport default class GuideMeteo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          forecast: null\r\n        };\r\n      }\r\n\r\n      callAPI = city => {\r\n        // Call API\r\n        axios\r\n          .get(`${API_URL}?q=${city}&appid=${API_KEY2}&units=metric`)\r\n          .then(({ data }) => {\r\n            console.log(data);\r\n            // Recupere uniquement la propriété data\r\n            const { list } = data;\r\n            // On prend les trois premières heures de chaque jour (donc de 0-3h))\r\n            const forecast = [list[0], list[9], list[17], list[25], list[33]];\r\n    \r\n            this.setState({ forecast });\r\n          })\r\n          .catch(console.error);\r\n      };\r\n\r\n    // Lance un appel au lancement du component\r\n    componentDidMount() {\r\n        const { city } = this.props;\r\n        this.callAPI(city);\r\n    }\r\n\r\n    // A chaque update relance une api\r\n    componentDidUpdate(nextProps) {\r\n      // Ici on verifie que la mise à jour concerne bien le champs city\r\n      if (nextProps !== this.props.city) {\r\n        this.callAPI(nextProps.city);\r\n      }\r\n    }\r\n\r\n    render() {\r\n        const { forecast } = this.state;\r\n        const { city } = this.props;\r\n\r\n        if (!forecast) return <p>Loading...</p>;\r\n        \r\n        return (\r\n          <div>\r\n            <h2 className=\"forecast-header\">{city}</h2>\r\n            <div className=\"forecast-container\">\r\n              {/* render tout le tableau */}\r\n              {forecast.map((forecastData, index) => {\r\n                return <Meteo key={index} data={forecastData} />;\r\n              })}\r\n              {/* <Meteo data={forecast[0]}/>,\r\n              <Meteo data={forecast[1]}/>,\r\n              <Meteo data={forecast[2]}/>,\r\n              <Meteo data={forecast[3]}/>,\r\n              <Meteo data={forecast[4]}/> */}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}