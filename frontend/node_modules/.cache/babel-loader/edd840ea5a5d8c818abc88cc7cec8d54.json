{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinty\\\\OneDrive\\\\Documents\\\\ECE\\\\cours_ing4\\\\Git-OCRES\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\containers\\\\DataPokedex.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport Pokemon from '../components/pokemon';\nimport \"../App.css\";\nimport '../index.css';\nconst API_URL = \"https://pokeapi.co/api/v2/pokemon\";\nconst API_KEY = \"\";\nexport default class FichePokemon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callAPI = name => {\n      // Call API\n      axios.get(\"\".concat(API_URL, \"/\").concat(name, \"/\")).then(({\n        data\n      }) => {\n        console.log(data); // Recupere uniquement la propriété data\n        // const { list } = data;\n        // On prend les data en question\n\n        const dataPoke = {\n          data\n        };\n        this.setState({\n          dataPoke\n        });\n      }).catch(console.error);\n    };\n\n    this.state = {\n      dataPoke: null\n    };\n  }\n\n  // Lance un appel au lancement du component\n  componentDidMount() {\n    const name = this.props.name;\n    this.callAPI(name);\n  } // A chaque update relance une api\n\n\n  componentDidUpdate(nextProps) {\n    // Ici on verifie que la mise à jour concerne bien le champs city\n    if (nextProps !== this.props.name) {\n      this.callAPI(nextProps);\n    }\n  }\n\n  render() {\n    const dataPoke = this.state.dataPoke;\n    const name = this.props.name;\n    if (!dataPoke) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Loading...\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, dataPoke.map(dataPokeData => {\n      return React.createElement(Pokemon, {\n        data: dataPoke,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sinty/OneDrive/Documents/ECE/cours_ing4/Git-OCRES/PROJECT_WEB_OCRES/frontend/src/containers/DataPokedex.js"],"names":["React","axios","Pokemon","API_URL","API_KEY","FichePokemon","Component","constructor","props","callAPI","name","get","then","data","console","log","dataPoke","setState","catch","error","state","componentDidMount","componentDidUpdate","nextProps","render","map","dataPokeData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,YAAP;AACA,OAAO,cAAP;AAGA,MAAMC,OAAO,GAAG,mCAAhB;AACA,MAAMC,OAAO,GAAG,EAAhB;AAEA,eAAe,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMjBC,OANiB,GAMNC,IAAD,IAAU;AAClB;AACAT,MAAAA,KAAK,CACFU,GADH,WACUR,OADV,cACqBO,IADrB,QAEGE,IAFH,CAEQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADkB,CAElB;AACA;AACA;;AACA,cAAMG,QAAQ,GAAG;AAAEH,UAAAA;AAAF,SAAjB;AAEA,aAAKI,QAAL,CAAc;AAAED,UAAAA;AAAF,SAAd;AACD,OAVH,EAWGE,KAXH,CAWSJ,OAAO,CAACK,KAXjB;AAYD,KApBgB;;AAEf,SAAKC,KAAL,GAAa;AACXJ,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAiBH;AACAK,EAAAA,iBAAiB,GAAG;AAAA,UACRX,IADQ,GACC,KAAKF,KADN,CACRE,IADQ;AAEhB,SAAKD,OAAL,CAAaC,IAAb;AACH,GA3BqD,CA6BtD;;;AACAY,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B;AACA,QAAIA,SAAS,KAAK,KAAKf,KAAL,CAAWE,IAA7B,EAAmC;AACjC,WAAKD,OAAL,CAAac,SAAb;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGR,QADH,GACgB,KAAKI,KADrB,CACGJ,QADH;AAAA,UAEGN,IAFH,GAEY,KAAKF,KAFjB,CAEGE,IAFH;AAGL,QAAI,CAACM,QAAL,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACf,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,QAAQ,CAACS,GAAT,CAAcC,YAAD,IAAkB;AAC9B,aAAO,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEV,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CADL,CADF;AAOD;;AAhDmD","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport Pokemon from '../components/pokemon';\r\nimport \"../App.css\";\r\nimport '../index.css';\r\n\r\n\r\nconst API_URL = \"https://pokeapi.co/api/v2/pokemon\";\r\nconst API_KEY = \"\";\r\n\r\nexport default class FichePokemon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          dataPoke: null\r\n        };\r\n      }\r\n      callAPI = (name) => {\r\n        // Call API\r\n        axios\r\n          .get(`${API_URL}/${name}/`)\r\n          .then(({ data }) => {\r\n            console.log(data);\r\n            // Recupere uniquement la propriété data\r\n            // const { list } = data;\r\n            // On prend les data en question\r\n            const dataPoke = { data };\r\n    \r\n            this.setState({ dataPoke });\r\n          })\r\n          .catch(console.error);\r\n      };\r\n\r\n    // Lance un appel au lancement du component\r\n    componentDidMount() {\r\n        const { name } = this.props;\r\n        this.callAPI(name);\r\n    }\r\n\r\n    // A chaque update relance une api\r\n    componentDidUpdate(nextProps) {\r\n      // Ici on verifie que la mise à jour concerne bien le champs city\r\n      if (nextProps !== this.props.name) {\r\n        this.callAPI(nextProps);\r\n      }\r\n    }\r\n\r\n    render() {\r\n        const { dataPoke } = this.state;\r\n        const { name } = this.props;\r\n        if (!dataPoke) return <p>Loading...</p>;\r\n        return (\r\n          <div>\r\n              {dataPoke.map((dataPokeData) => {\r\n                return <Pokemon data={dataPoke} />;\r\n              })}\r\n          </div>\r\n        );\r\n      }\r\n}"]},"metadata":{},"sourceType":"module"}