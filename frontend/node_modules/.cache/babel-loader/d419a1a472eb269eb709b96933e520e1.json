{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sinty\\\\OneDrive\\\\Documents\\\\ECE\\\\cours_ing4\\\\Git-OCRES\\\\PROJECT_WEB_OCRES\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport ascending from \"./ascending.js\";\nimport permute from \"./permute.js\";\nexport default function sort(values, ...F) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  values = Array.from(values);\n\n  let _F = F,\n      _F2 = _slicedToArray(_F, 1),\n      _F2$ = _F2[0],\n      f = _F2$ === void 0 ? ascending : _F2$;\n\n  if (f.length === 1 || F.length > 1) {\n    const index = Uint32Array.from(values, (d, i) => i);\n\n    if (F.length > 1) {\n      F = F.map(f => values.map(f));\n      index.sort((i, j) => {\n        for (const f of F) {\n          const c = ascending(f[i], f[j]);\n          if (c) return c;\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort((i, j) => ascending(f[i], f[j]));\n    }\n\n    return permute(values, index);\n  }\n\n  return values.sort(f);\n}","map":null,"metadata":{},"sourceType":"module"}